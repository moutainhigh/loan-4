server:
    port: 8081

spring:
    application:
        name: loan-cust
    profiles:
        active: dev
    http:
        multipart:
          max-file-size: 100MB    # 单个文件大小
          max-request-size: 100MB # 总上传数据大小

eureka:
    client:
        serviceUrl:
            defaultZone: http://localhost:8071/eureka/

# 数据库配置
masterDB:
    dbCfg:
        druidDBCfg:
            driverClassName: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
            url: jdbc:log4jdbc:mysql://${common.mysql.url}:${common.mysql.port}/${common.mysql.dbname}?characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
            username: ${common.mysql.username}
            password: ${common.mysql.password}
            initialSize: 1 # 启动时初始化的创建的连接个数
            maxActive: 50 #可以在池中保持空闲的最大连接数，超出设置值之外的空闲连接将被回收，如设置为-1不限制
            minIdle: 5 #可以在池中保持空闲的最小连接数，超出设置值之外的空闲连接将被创建，如设置为0不创建
            maxWait: 10000 # 如果没有可用连接,在抛出异常前等待的一个连接被归还的最大毫秒数，设置为-1， 设为-1无限制
            removeAbandonedTimeout: 180 # 已抛弃的连接可以被移除的超时时间，单位为秒
            removeAbandoned: true #超过removeAbandonedTimeout时间后，进行已抛弃的回收
            timeBetweenEvictionRunsMillis: 60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            minEvictableIdleTimeMillis: 300000  #配置一个连接在池中最小生存的时间，单位是毫秒
            validationQuery: SELECT 1 FROM DUAL  #用来检测连接是否有效的sql，要求是一个查询语句
            testWhileIdle: false  #申请连接的时候检测
            testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
            maxOpenPreparedStatements: 50 #打开PSCache，并且指定每个连接上PSCache的大小
            filters: stat # 属性类型是字符串，常用插件有:监控统计filter:stat、 日志filter:log4j、 防御SQL注入filter:wall
        txAttributes: #参考TransactionAttributeEditor.setAsText()
                "add*": "PROPAGATION_REQUIRED,-Exception"
                "insert*": "PROPAGATION_REQUIRED,-Exception"
                "save*": "PROPAGATION_REQUIRED,-Exception"
                "update*": "PROPAGATION_REQUIRED,-Exception"
                "delete*": "PROPAGATION_REQUIRED,-Exception"
                "*": "readOnly"
        manageMethod: "execution(* com.aoying.loan.cust.*.service.*.*(..))"
        configLocation: classpath:config/SqlMapConfig.xml
        mapperLocations: classpath*:com/aoying/loan/cust/*/sqlmap/*.xml
    redisCfg:
        redisPoolCfg:
            minIdle: 1 #可以在池中保持空闲的最小连接数
            maxIdle: 10 #可以在池中保持空闲的最大连接数
            maxTotal: 50 #最大连接数
            maxWaitMillis: 60000 # 如果没有可用连接,在抛出异常前等待的一个连接被归还的最大毫秒数，设置为-1， 设为-1无限制
            testWhileIdle: false # 申请连接的时候检测
            testOnCreate: false
            testOnBorrow: false # 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
            testOnReturn: false # 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
        redisShardCfg:
            connectionTimeout: 60000
            soTimeout: 60000
        hostsCfg:
            - redis://${common.jedis.hosts.host_1}

# 定时任务配置
taskCfg:
    theadPoolCfg:
        corePoolSize: 20
        maxPoolSize: 50
        keepAliveSeconds: 300
        queueCapacity: 0
#    testTask:
#        cron: 0/2 * * * * ?

# 系统配置
sysCfg:
    isRelease: false
    idCardAuthLimit: 3 #每个账号每天实名次数限制
    loanReportLimit: 1  #每个账号每天报告次数限制
    verfCodeService:
        staticPicVerfCodeLength: 4 #静态图片验证码长度
        staticPicVerfCodeExp: 5 #静态图片验证码过期时间，单位分钟
        smsVerfCodeLength: 4 #短信验证码长度
        smsVerfCodeExp: 5 #短信验证码过期时间，单位分钟
    custSessionService:
        tokenName: userToken #客户端token名称
        sessionExp: 7200 #session过期时长，单位：分钟
    sysAuthInfoService:
        authSignExp: 1440 #请求头中包含的授权签名时效，单位：分钟
